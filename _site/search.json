[
  {
    "objectID": "data/README 2.html",
    "href": "data/README 2.html",
    "title": "Data",
    "section": "",
    "text": "[Dataset]: Description of the dataset"
  },
  {
    "objectID": "data/README 2.html#variable-names-and-descriptions",
    "href": "data/README 2.html#variable-names-and-descriptions",
    "title": "Data",
    "section": "Variable Names and Descriptions:",
    "text": "Variable Names and Descriptions:\n\nvariable: Description"
  },
  {
    "objectID": "data/README 2.html#data-types",
    "href": "data/README 2.html#data-types",
    "title": "Data",
    "section": "Data Types:",
    "text": "Data Types:\n\nColumn: data type"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This project was developed by [Team Name] For INFO 526 - Data Analysis and Visualization at the University of Arizona, taught by Dr. Greg Chism. The team is comprised of the following team members.\n\nTeam member 1: One sentence description of Team member 1 (e.g., year, major, etc.).\nTeam member 2: One sentence description of Team member 2 (e.g., year, major, etc.).\nTeam member 3: One sentence description of Team member 3 (e.g., year, major, etc.).\nTeam member 4: One sentence description of Team member 4 (e.g., year, major, etc.)."
  },
  {
    "objectID": "presentation.html#quarto",
    "href": "presentation.html#quarto",
    "title": "The Power of Voters",
    "section": "Quarto",
    "text": "Quarto\n\nThe presentation is created using the Quarto CLI\n## sets the start of a new slide"
  },
  {
    "objectID": "presentation.html#layouts",
    "href": "presentation.html#layouts",
    "title": "The Power of Voters",
    "section": "Layouts",
    "text": "Layouts\nYou can use plain text\n\n\n\nor bullet points1\n\n\nor in two columns\n\n\n\nlike\nthis\n\nAnd add footnotes"
  },
  {
    "objectID": "presentation.html#code",
    "href": "presentation.html#code",
    "title": "The Power of Voters",
    "section": "Code",
    "text": "Code\n\n\n# A tibble: 2 × 5\n  term        estimate std.error statistic       p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;\n1 (Intercept)   25.3      3.08        8.22 0.00000000358\n2 speed         -0.116    0.0642     -1.81 0.0806       \n\n\n# A tibble: 1 × 12\n  r.squared adj.r.squared sigma statistic p.value    df logLik   AIC   BIC\n      &lt;dbl&gt;         &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1    0.0983        0.0682  5.82      3.27  0.0806     1  -101.  207.  212.\n# ℹ 3 more variables: deviance &lt;dbl&gt;, df.residual &lt;int&gt;, nobs &lt;int&gt;"
  },
  {
    "objectID": "presentation.html#plots",
    "href": "presentation.html#plots",
    "title": "The Power of Voters",
    "section": "Plots",
    "text": "Plots"
  },
  {
    "objectID": "presentation.html#plot-and-text",
    "href": "presentation.html#plot-and-text",
    "title": "The Power of Voters",
    "section": "Plot and text",
    "text": "Plot and text\n\n\n\nSome text\ngoes here"
  },
  {
    "objectID": "presentation.html#tables",
    "href": "presentation.html#tables",
    "title": "The Power of Voters",
    "section": "Tables",
    "text": "Tables\nIf you want to generate a table, make sure it is in the HTML format (instead of Markdown or other formats), e.g.,\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\n\n\n\n\nAdelie\nTorgersen\n39.1\n18.7\n181\n3750\nmale\n\n\nAdelie\nTorgersen\n39.5\n17.4\n186\n3800\nfemale\n\n\nAdelie\nTorgersen\n40.3\n18.0\n195\n3250\nfemale\n\n\nAdelie\nTorgersen\nNA\nNA\nNA\nNA\nNA\n\n\nAdelie\nTorgersen\n36.7\n19.3\n193\n3450\nfemale\n\n\nAdelie\nTorgersen\n39.3\n20.6\n190\n3650\nmale"
  },
  {
    "objectID": "presentation.html#images",
    "href": "presentation.html#images",
    "title": "The Power of Voters",
    "section": "Images",
    "text": "Images\n\nImage credit: Danielle Navarro, Percolate."
  },
  {
    "objectID": "presentation.html#math-expressions",
    "href": "presentation.html#math-expressions",
    "title": "The Power of Voters",
    "section": "Math Expressions",
    "text": "Math Expressions\nYou can write LaTeX math expressions inside a pair of dollar signs, e.g. $\\alpha+\\beta$ renders \\(\\alpha + \\beta\\). You can use the display style with double dollar signs:\n$$\\bar{X}=\\frac{1}{n}\\sum_{i=1}^nX_i$$\n\\[\n\\bar{X}=\\frac{1}{n}\\sum_{i=1}^nX_i\n\\]\nLimitations:\n\nThe source code of a LaTeX math expression must be in one line, unless it is inside a pair of double dollar signs, in which case the starting $$ must appear in the very beginning of a line, followed immediately by a non-space character, and the ending $$ must be at the end of a line, led by a non-space character;\nThere should not be spaces after the opening $ or before the closing $."
  },
  {
    "objectID": "presentation.html#feeling-adventurous",
    "href": "presentation.html#feeling-adventurous",
    "title": "The Power of Voters",
    "section": "Feeling adventurous?",
    "text": "Feeling adventurous?\n\nYou are welcomed to use the default styling of the slides. In fact, that's what I expect majority of you will do. You will differentiate yourself with the content of your presentation.\nBut some of you might want to play around with slide styling. Some solutions for this can be found at https://quarto.org/docs/presentations/revealjs."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Analyzing Trends in House of Representatives from 2016-2020",
    "section": "",
    "text": "Add project abstract here."
  },
  {
    "objectID": "index.html#abstract",
    "href": "index.html#abstract",
    "title": "Analyzing Trends in House of Representatives from 2016-2020",
    "section": "",
    "text": "Add project abstract here."
  },
  {
    "objectID": "index.html#setup",
    "href": "index.html#setup",
    "title": "Analyzing Trends in House of Representatives from 2016-2020",
    "section": "Setup",
    "text": "Setup\n\nif(!require(pacman))\n  install.packages(\"pacman\") #utilize pacman to load each package, while ensuring nothing is redownloaded unnecesarily\n\nLoading required package: pacman\n\noptions(timeout = 1200) #sf takes forever to download so we have to increase the timeout time\n\npacman::p_load(tidyverse, #Add new packages as necessary\n               here,\n               devtools,\n               dlookr,\n               dplyr,\n               usmap,\n               sf,\n               ggrepel,\n               scales,\n               usmapdata, \n               grid,\n               ggpubr\n               )\n\nAdd new sections as necessary [DELETE BEFORE TURNING IN]"
  },
  {
    "objectID": "index.html#eda",
    "href": "index.html#eda",
    "title": "Analyzing Trends in House of Representatives from 2016-2020",
    "section": "EDA",
    "text": "EDA\n\nelec &lt;- readr::read_csv('data/house.csv')\n\nRows: 32452 Columns: 20\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): state, state_po, office, district, stage, candidate, party, mode\ndbl (7): year, state_fips, state_cen, state_ic, candidatevotes, totalvotes, ...\nlgl (5): runoff, special, writein, unofficial, fusion_ticket\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndescribe(elec)\n\n# A tibble: 7 × 26\n  described_variables     n    na   mean     sd se_mean    IQR skewness kurtosis\n  &lt;chr&gt;               &lt;int&gt; &lt;int&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 year                32452     0 2.00e3 1.36e1 7.57e-2 2.4 e1  -0.0792    -1.14\n2 state_fips          32452     0 2.88e1 1.52e1 8.45e-2 2.3 e1  -0.145     -1.12\n3 state_cen           32452     0 5.09e1 2.63e1 1.46e-1 5.1 e1   0.273     -1.28\n4 state_ic            32452     0 3.71e1 2.18e1 1.21e-1 3.8 e1   0.192     -1.16\n5 candidatevotes      32452     0 6.68e4 6.51e4 3.61e+2 1.08e5   1.03       4.55\n6 totalvotes          32452     0 2.15e5 8.23e4 4.57e+2 1.01e5   4.31     119.  \n7 version             32452     0 2.02e7 0      0       0      NaN        NaN   \n# ℹ 17 more variables: p00 &lt;dbl&gt;, p01 &lt;dbl&gt;, p05 &lt;dbl&gt;, p10 &lt;dbl&gt;, p20 &lt;dbl&gt;,\n#   p25 &lt;dbl&gt;, p30 &lt;dbl&gt;, p40 &lt;dbl&gt;, p50 &lt;dbl&gt;, p60 &lt;dbl&gt;, p70 &lt;dbl&gt;,\n#   p75 &lt;dbl&gt;, p80 &lt;dbl&gt;, p90 &lt;dbl&gt;, p95 &lt;dbl&gt;, p99 &lt;dbl&gt;, p100 &lt;dbl&gt;\n\nelec16to20 &lt;- elec |&gt;\n  filter(between(year,2016,2020))  #filter years to between 2016 and 2020\n\n#ggplot(elec) |&gt; #create a plot to show change house elections from entire dataset"
  },
  {
    "objectID": "index.html#data-wrangling",
    "href": "index.html#data-wrangling",
    "title": "Analyzing Trends in House of Representatives from 2016-2020",
    "section": "Data Wrangling",
    "text": "Data Wrangling\n\nfor (date in c(2016, #aggregate state mode of party to determine which party has the \n               2018, #majority\n               2020)) {\n  result &lt;- elec16to20 |&gt;\n    filter(year == date) |&gt;\n    group_by(state) |&gt;\n    summarize(winnerByHouseMajority = names(which.max(table(party))))\n  assign(paste0('partyMaj', \n                date), \n         result)\n}\n  \nfor(date in c(2016,2018,2020)) { #for each state determine which party got the most votes\n  result &lt;- elec16to20 |&gt;\n    filter(year == date) |&gt;\n    group_by(state) |&gt;\n    summarize(winnerByTotalVotes = party[which.max(candidatevotes)], \n              partyVotes = sum(candidatevotes)) |&gt;\n    mutate(fips = fips(state)) #necessary for plotting on US map only on this plot because we will merge\n  assign(paste0('genMaj',\n                date), \n         result)\n}\n\ndata2016 &lt;- merge(genMaj2016,partyMaj2016) |&gt;\n  merge(centroid_labels(regions = c('states')), by = \"fips\") #adds in data for centroid of each state for labeling\ndata2018 &lt;- merge(genMaj2018, partyMaj2018) |&gt; \n  merge(centroid_labels(regions = c('states')), by = \"fips\")\ndata2020 &lt;- merge(genMaj2020, partyMaj2020) |&gt;\n  merge(centroid_labels(regions = c('states')), by = \"fips\")"
  },
  {
    "objectID": "index.html#data-visualization",
    "href": "index.html#data-visualization",
    "title": "Analyzing Trends in House of Representatives from 2016-2020",
    "section": "Data Visualization",
    "text": "Data Visualization\n\n#general plot just to get used to the function. We can add layers like a ggplot object\n#For Question 1 we want three maps of the US where each state is colored based on the winning party, then also a number for each state corresponding to the party that had the most votes\n\n\n us2016 &lt;- plot_usmap(data = data2016, \n           values = \"winnerByHouseMajority\", \n           labels = FALSE) + \n  scale_fill_manual(name = 'Winner by House Majority', \n                    values = c(\"REPUBLICAN\" = 'red' , \"DEMOCRAT\" = 'blue'))+ \n  geom_label_repel(data = data2016,\n                   aes(label = abbr,\n                       geometry = geom,\n                       color = winnerByTotalVotes),\n                   stat = 'sf_coordinates',\n                   size = 5,\n                   force = 0.01, \n                   min.segment.length = 0) +\n  scale_color_manual(name = 'Winner by Total Votes', values = c(\"REPUBLICAN\"= \"red\", \"DEMOCRAT\"=\"blue\")) +     guides(color = guide_legend(title = \"Winner by Total Votes\")) + \n  labs(\n    title = 'House Majority vs Popular Vote Majority',\n    subtitle = \"By State in 2016\",\n    #caption = \"Teal & Harmon | Tidy Tuesday 2023\"\n  ) + \n  theme(\n    plot.title = element_text(size = 25, hjust = 0.5, vjust = -10),\n    plot.subtitle = element_text(size = 24, hjust = 0.5, vjust = -10),\n    #plot.caption = element_text(size = 20, hjust = 0.5),\n    legend.text = element_text(size = 12, hjust = 0),\n    legend.title = element_text(size = 16, hjust= 0),\n    legend.position = c(0.6,0.03)\n  )\n\n\nus2018 &lt;- plot_usmap(data = data2018, \n           values = \"winnerByHouseMajority\", \n           labels = FALSE) + \n  scale_fill_manual(name = 'Winner by House Majority', \n                    values = c(\"REPUBLICAN\" = 'red' , \"DEMOCRAT\" = 'blue'))+ \n  geom_label_repel(data = data2016,\n                   aes(label = abbr,\n                       geometry = geom,\n                       color = winnerByTotalVotes),\n                   stat = 'sf_coordinates',\n                   size = 5,\n                   force = 0.01, \n                   min.segment.length = 0) +\n  scale_color_manual(name = 'Winner by Total Votes', values = c(\"REPUBLICAN\"= \"red\", \"DEMOCRAT\"=\"blue\")) +     guides(color = guide_legend(title = \"Winner by Total Votes\")) + \n  labs(\n    title = 'House Majority vs Popular Vote Majority',\n    subtitle = \"By State in 2018\",\n    #caption = \"Teal & Harmon | Tidy Tuesday 2023\"\n  ) + \n  theme(\n    plot.title = element_text(size = 25, hjust = 0.5, vjust = -10),\n    plot.subtitle = element_text(size = 24, hjust = 0.5, vjust = -10),\n    #plot.caption = element_text(size = 20, hjust = 0.5),\n    legend.text = element_text(size = 12, hjust = 0),\n    legend.title = element_text(size = 16, hjust= 0),\n    legend.position = c(0.6,0.03)\n  )\n\nus2020 &lt;- plot_usmap(data = data2020, \n           values = \"winnerByHouseMajority\", \n           labels = FALSE) + \n  scale_fill_manual(name = 'Winner by House Majority', \n                    values = c(\"REPUBLICAN\" = 'red' , \"DEMOCRAT\" = 'blue'))+ \n  geom_label_repel(data = data2016,\n                   aes(label = abbr,\n                       geometry = geom,\n                       color = winnerByTotalVotes),\n                   stat = 'sf_coordinates',\n                   size = 5,\n                   force = 0.01, \n                   min.segment.length = 0,\n                   force_pull = 0.5) +\n  scale_color_manual(name = 'Winner by Total Votes', values = c(\"REPUBLICAN\"= \"red\", \"DEMOCRAT\"=\"blue\")) +     guides(color = guide_legend(title = \"Winner by Total Votes\")) + \n  labs(\n    title = 'House Majority vs Popular Vote Majority',\n    subtitle = \"By State in 2020\",\n    caption = \"Teal & Harmon | Tidy Tuesday 2023\"\n  ) + \n  theme(\n    plot.title = element_text(size = 25, hjust = 0.5, vjust = -10),\n    plot.subtitle = element_text(size = 24, hjust = 0.5, vjust = -10),\n    plot.caption = element_text(size = 20, hjust = 0.5),\n    legend.text = element_text(size = 12, hjust = 0),\n    legend.title = element_text(size = 16, hjust= 0),\n    legend.position = c(0.6,0.03)\n  )\n\nggarrange(us2016, us2018, us2020, ncol = 1)"
  },
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "The Power of Voters",
    "section": "",
    "text": "Variable\nType\nDescription\n\n\n\n\nyear\ninteger\nYear in which election was held.\n\n\nstate_po\ncharacter\nState name.\n\n\nparty\ncharacter\nParty of the candidate.\n\n\ncandidate\ncharacter\nName of the candidate as it appears in the House Clerk report.\n\n\ncandidatevotes\ninteger\nNo. of votes the candidate received.\n\n\ndistrict\ncharacter\nDistrict number in state\n\n\nrunoff\nlogical\nSecond election held to determine a winner\n\n\nspecial\nlogical\nSpecial Election.\n\n\ntotalvotes\ninteger\nTotal Votes in District\n\n\n\nPreview of dataset\n\n\n# A tibble: 5 × 9\n   year state_po party      candidate     candidatevotes district runoff special\n  &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;      &lt;chr&gt;                  &lt;dbl&gt; &lt;chr&gt;    &lt;lgl&gt;  &lt;lgl&gt;  \n1  1976 AL       DEMOCRAT   BILL DAVENPO…          58906 001      FALSE  FALSE  \n2  1976 AK       REPUBLICAN DON YOUNG              83722 000      FALSE  FALSE  \n3  1976 CA       DEMOCRAT   ROBERT L LEG…          75844 004      FALSE  FALSE  \n4  1976 FL       DEMOCRAT   GABRIEL CAZA…          80821 006      FALSE  FALSE  \n5  1976 HI       REPUBLICAN FREDERICK RO…          53745 001      FALSE  FALSE  \n# ℹ 1 more variable: totalvotes &lt;dbl&gt;\n\n\nAbout the dataset\nThe dataset, US House Election Results sourced from MIT Election Data and Science Lab (MEDSL), offers a comprehensive overview of US House elections.\nThis dataset contains observations for elections held over 47 years from 1976 to 2022, encompassing a total of 32,452 recorded events. Each event is represented as a row with 20 attributes as columns. These columns provide details including the year, state, district, political party, candidate’s name, votes received, and various indicators such as whether it was a runoff election or if it was a write-in candidate.\nReason for choosing dataset\nThe US House Election dataset offers a rich and comprehensive source of data, encompassing multiple variables such as election years, state information, candidate details, and voting outcomes. This abundance of data provides ample opportunities for rigorous analysis and exploration within the scope of the academic project."
  },
  {
    "objectID": "proposal.html#dataset",
    "href": "proposal.html#dataset",
    "title": "The Power of Voters",
    "section": "",
    "text": "Variable\nType\nDescription\n\n\n\n\nyear\ninteger\nYear in which election was held.\n\n\nstate_po\ncharacter\nState name.\n\n\nparty\ncharacter\nParty of the candidate.\n\n\ncandidate\ncharacter\nName of the candidate as it appears in the House Clerk report.\n\n\ncandidatevotes\ninteger\nNo. of votes the candidate received.\n\n\ndistrict\ncharacter\nDistrict number in state\n\n\nrunoff\nlogical\nSecond election held to determine a winner\n\n\nspecial\nlogical\nSpecial Election.\n\n\ntotalvotes\ninteger\nTotal Votes in District\n\n\n\nPreview of dataset\n\n\n# A tibble: 5 × 9\n   year state_po party      candidate     candidatevotes district runoff special\n  &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;      &lt;chr&gt;                  &lt;dbl&gt; &lt;chr&gt;    &lt;lgl&gt;  &lt;lgl&gt;  \n1  1976 AL       DEMOCRAT   BILL DAVENPO…          58906 001      FALSE  FALSE  \n2  1976 AK       REPUBLICAN DON YOUNG              83722 000      FALSE  FALSE  \n3  1976 CA       DEMOCRAT   ROBERT L LEG…          75844 004      FALSE  FALSE  \n4  1976 FL       DEMOCRAT   GABRIEL CAZA…          80821 006      FALSE  FALSE  \n5  1976 HI       REPUBLICAN FREDERICK RO…          53745 001      FALSE  FALSE  \n# ℹ 1 more variable: totalvotes &lt;dbl&gt;\n\n\nAbout the dataset\nThe dataset, US House Election Results sourced from MIT Election Data and Science Lab (MEDSL), offers a comprehensive overview of US House elections.\nThis dataset contains observations for elections held over 47 years from 1976 to 2022, encompassing a total of 32,452 recorded events. Each event is represented as a row with 20 attributes as columns. These columns provide details including the year, state, district, political party, candidate’s name, votes received, and various indicators such as whether it was a runoff election or if it was a write-in candidate.\nReason for choosing dataset\nThe US House Election dataset offers a rich and comprehensive source of data, encompassing multiple variables such as election years, state information, candidate details, and voting outcomes. This abundance of data provides ample opportunities for rigorous analysis and exploration within the scope of the academic project."
  },
  {
    "objectID": "proposal.html#questions",
    "href": "proposal.html#questions",
    "title": "The Power of Voters",
    "section": "Questions",
    "text": "Questions\nQuestion 1: How did US voting trends change in the 2016-2020 presidential term?\nQuestion 2: How is the type of voting influenced by population and how does that influence who looses?"
  },
  {
    "objectID": "proposal.html#analysis-plan",
    "href": "proposal.html#analysis-plan",
    "title": "The Power of Voters",
    "section": "Analysis plan",
    "text": "Analysis plan\nFor Question 1:\nIntroduction:\nusing the election data of 2016-2020 presidential term, we aim to filter the data for the most recent or a specific year of interest.Then to determine the wining party for each state by calculating the total votes as the winner. Finally, we create a a map of the USA is created to visualize the political landscape, coloring each state based on the wining party.\nVariables Involved:\n\nstate_po: The two-letter postal abbreviation for the state.\nparty: The political party of the candidate.\nyear: Year of the election, focusing on the most recent general election or a specific year of interest.\ncandidatevotes: The number of votes the candidate received.\n\nAnalysis Approach:\n\nFilter Data: Data selection from the general elections (stage variable) for the most recent year or a specific year of interest. The analysis focuses on data from the general elections for the most recent year or a specific year of interest within the 2016-2020 presidential term. This data includes information such as the two-letter postal abbreviation for each state (state_po), the political party of the candidate (party), the year of the election (year), and the number of votes each candidate received (candidatevotes).\nDetermine Winners: For each state, the analysis identifies the party with the highest aggregate candidate votes in the general election. This involves summing up the candidate votes for each party within each state and selecting the party with the highest total votes as the winner for that state.\nVisualization: Create a map of the USA, coloring each state based on the winning party. This visualization provides a clear depiction of the political landscape across the states for the selected election year, highlighting which party won each state.\n\nFor Question 2:\nIntroduction:\nBy merging the population data with existing election data to analyze how type of voting vary according to the population size in congressional districts. Using statistical approach to identify relationships between population and voting type, and also to determine which party tends to loose under certain conditions.\nVariables Involved:\n\ndistrict: The congressional district number.\nrunoff : second election held to determine a winner\nspecial : Special election\nparty: The political party of the candidate.\nyear: Year of the election, focusing on the most recent general election or a specific year of interest.\ncandidatevotes: The number of votes the candidate received.\ncandidate: Name of candidate\ntotalvotes: Total Votes in District\n\nVariables to be Created:\n\npopulation: This will require merging external data containing population\n\nAnalysis Approach:\n\nMerge External Data: The first step involves incorporating population data from a reliable source, such as the U.S. Census Bureau. This additional dataset will provide information on the population within each congressional district, which is essential for analyzing the relationship between population and voting type.\nHandling missing data or NA values: The dataset has various missing data points and NA values where data was either unable to be gathered, or there is simply no available data. To handle missing and NA values in discrete data, we as interpolation or imputation is not possible. For continuous data that is missing or NA, we will use mid-points, interpolation, or imputation to replace missing values. In the case that a row has missing continuous and discrete data, we will default to the rules we established for discrete data and remove the row entirely.\nMerge External Data: The first step involves incorporating population data from a reliable source, such as the U.S. Census Bureau. This additional dataset will provide information on the population within each congressional district, which is essential for analyzing the relationship between population and voting type.\nAnalyze Voting Type by Population: Examine the relationship between population and the type of voting, using statistical analysis .how the type of voting (e.g., fusion ticket, runoff, special elections) varies with population size. This analysis could involve methods such as regression analysis, chi-square tests, or other appropriate statistical techniques to identify any significant relationships or patterns.\ni. Statistical analysis techniques:\n\nRegression Analysis: We plan to use Logistic Regression to predict the probability of a party winning in a district based on variables such as population size, type of voting (e.g., fusion ticket, runoff, special elections), and demographic factors. Logistic regression is chosen because the outcome variable (win/lose) is binary. We will also explore Multiple linear regression models to understand the relationship between the number of votes received (continuous outcome variable) and predictors like population density and election type.\nChi-Square Tests: Chi-square tests will be utilized to examine the association between categorical variables, such as the presence of a fusion ticket and the winning party. This will help us identify if the distribution of election outcomes differs significantly across categories like election type (general, runoff, special) or district characteristics.\nTime-Series Analysis: For a longitudinal examination of voting trends, we will implement time-series analysis to assess changes over multiple election cycles. This includes using ARIMA (Auto Regressive Integrated Moving Average) , Exponential smoothing models to forecast voting patterns based on historical data. Additionally, Holt-Winters Seasonal Method , Time-series decomposition will also be employed to identify seasonal effects, trends, and residuals in voting behaviors, which can be correlated with major political or social events.\n\nii. Structured Comparative Analysis Over Time\nTo systematically address changes in US voting trends over time, our approach will include:\n\nSegmented Time-Series Analysis: We will divide the dataset into distinct time segments based on significant political or social milestones (e.g., changes in administration, major legislative changes, social movements). This will allow us to compare voting patterns before and after these events, providing insights into their impact on electoral outcomes.\nCross-Election Cycle Comparison: By comparing data across different election cycles, we aim to identify shifts in voter preferences, party dominance, and the effectiveness of various campaign strategies. This comparison will be visualized through line graphs and heat maps to illustrate trends and deviations over time.\nInteraction Effects in Regression Models: To understand the complex interplay between different factors influencing voting trends, we will include interaction terms in our regression models. This will help us examine how the impact of one variable (e.g., population size) on voting outcomes might change under different conditions (e.g., during special elections versus general elections).\n\nCorrelate with Election Outcomes: Focusing on which party tends to loose with certain characteristics.the next step is to assess how these factors correlate with election outcomes. Specifically, the focus will be on understanding which party tends to lose under certain conditions.\n\nVisualization and Reporting:\n\nUse scatter plots or heat maps to show the relationship between population and mode of voting.\nCreate comparative visualizations to illustrate how these factors influence election outcomes, potentially using bar charts and pie chart\n\nLIMITATIONS:\nLimited Demographic Data: Obtaining and processing extensive demographic data spanning 47 years pose significant challenges. As a result, only basic demographic information such as population size is included in the analysis. Detailed demographic variables like age, race, and income level is not included due to data availability constraints.\nLimited Economic and Social Data: Similarly, accessing economic indicators, education levels, and other social factors at the district level for a 47-year period could also be challenging and so we are not including that in the analysis too"
  },
  {
    "objectID": "index.html#insight-gained",
    "href": "index.html#insight-gained",
    "title": "Analyzing Trends in House of Representatives from 2016-2020",
    "section": "Insight Gained",
    "text": "Insight Gained\nThe visualization of the House of Representatives broken down by district majority and popular vote majority provides multiple insights. 1) The sentiment of the general population is often overlooked by the electoral (district) system. 2) During a single presidency, the sentiment of the people will change significantly 3) Well known trends can be seen such as midterm elections supporting the opposite party of the incumbent president."
  }
]