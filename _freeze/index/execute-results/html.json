{
  "hash": "4208c067261e996b387c9b92549f4335",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Analyzing Trends in House of Representatives from 2016-2020\"\nsubtitle: \"INFO 526 - Project 1\"\nauthor: \"The Power of The Voters\"\nformat: html\neditor: visual\n---\n\n\n## Abstract\n\nAdd project abstract here.\n\n## Setup\n\n::: {.cell}\n\n```{.r .cell-code}\nif(!require(pacman))\n  install.packages(\"pacman\") #utilize pacman to load each package, while ensuring nothing is redownloaded unnecesarily\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: pacman\n```\n\n\n:::\n\n```{.r .cell-code}\noptions(timeout = 1200) #sf takes forever to download so we have to increase the timeout time\n\npacman::p_load(tidyverse, #Add new packages as necessary\n               here,\n               devtools,\n               dlookr,\n               dplyr,\n               usmap,\n               sf,\n               ggrepel,\n               scales,\n               usmapdata, \n               grid,\n               ggpubr\n               )\n```\n:::\n\nAdd new sections as necessary [DELETE BEFORE TURNING IN]\n\n## EDA\n\n::: {.cell}\n\n```{.r .cell-code}\nelec <- readr::read_csv('data/house.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 32452 Columns: 20\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): state, state_po, office, district, stage, candidate, party, mode\ndbl (7): year, state_fips, state_cen, state_ic, candidatevotes, totalvotes, ...\nlgl (5): runoff, special, writein, unofficial, fusion_ticket\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ndescribe(elec)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 26\n  described_variables     n    na   mean     sd se_mean    IQR skewness kurtosis\n  <chr>               <int> <int>  <dbl>  <dbl>   <dbl>  <dbl>    <dbl>    <dbl>\n1 year                32452     0 2.00e3 1.36e1 7.57e-2 2.4 e1  -0.0792    -1.14\n2 state_fips          32452     0 2.88e1 1.52e1 8.45e-2 2.3 e1  -0.145     -1.12\n3 state_cen           32452     0 5.09e1 2.63e1 1.46e-1 5.1 e1   0.273     -1.28\n4 state_ic            32452     0 3.71e1 2.18e1 1.21e-1 3.8 e1   0.192     -1.16\n5 candidatevotes      32452     0 6.68e4 6.51e4 3.61e+2 1.08e5   1.03       4.55\n6 totalvotes          32452     0 2.15e5 8.23e4 4.57e+2 1.01e5   4.31     119.  \n7 version             32452     0 2.02e7 0      0       0      NaN        NaN   \n# ℹ 17 more variables: p00 <dbl>, p01 <dbl>, p05 <dbl>, p10 <dbl>, p20 <dbl>,\n#   p25 <dbl>, p30 <dbl>, p40 <dbl>, p50 <dbl>, p60 <dbl>, p70 <dbl>,\n#   p75 <dbl>, p80 <dbl>, p90 <dbl>, p95 <dbl>, p99 <dbl>, p100 <dbl>\n```\n\n\n:::\n\n```{.r .cell-code}\nelec16to20 <- elec |>\n  filter(between(year,2016,2020))  #filter years to between 2016 and 2020\n\n#ggplot(elec) |> #create a plot to show change house elections from entire dataset\n```\n:::\n\n\n## Data Wrangling\n\n::: {.cell}\n\n```{.r .cell-code}\nfor (date in c(2016, #aggregate state mode of party to determine which party has the \n               2018, #majority\n               2020)) {\n  result <- elec16to20 |>\n    filter(year == date) |>\n    group_by(state) |>\n    summarize(winnerByHouseMajority = names(which.max(table(party))))\n  assign(paste0('partyMaj', \n                date), \n         result)\n}\n  \nfor(date in c(2016,2018,2020)) { #for each state determine which party got the most votes\n  result <- elec16to20 |>\n    filter(year == date) |>\n    group_by(state) |>\n    summarize(winnerByTotalVotes = party[which.max(candidatevotes)], \n              partyVotes = sum(candidatevotes)) |>\n    mutate(fips = fips(state)) #necessary for plotting on US map only on this plot because we will merge\n  assign(paste0('genMaj',\n                date), \n         result)\n}\n\ndata2016 <- merge(genMaj2016,partyMaj2016) |>\n  merge(centroid_labels(regions = c('states')), by = \"fips\") #adds in data for centroid of each state for labeling\ndata2018 <- merge(genMaj2018, partyMaj2018) |> \n  merge(centroid_labels(regions = c('states')), by = \"fips\")\ndata2020 <- merge(genMaj2020, partyMaj2020) |>\n  merge(centroid_labels(regions = c('states')), by = \"fips\")\n```\n:::\n\n\n\n## Data Visualization\n\n::: {.cell}\n\n```{.r .cell-code}\n#general plot just to get used to the function. We can add layers like a ggplot object\n#For Question 1 we want three maps of the US where each state is colored based on the winning party, then also a number for each state corresponding to the party that had the most votes\n\n\n us2016 <- plot_usmap(data = data2016, \n           values = \"winnerByHouseMajority\", \n           labels = FALSE) + \n  scale_fill_manual(name = 'Winner by House Majority', \n                    values = c(\"REPUBLICAN\" = 'red' , \"DEMOCRAT\" = 'blue'))+ \n  geom_label_repel(data = data2016,\n                   aes(label = abbr,\n                       geometry = geom,\n                       color = winnerByTotalVotes),\n                   stat = 'sf_coordinates',\n                   size = 5,\n                   force = 0.01, \n                   min.segment.length = 0) +\n  scale_color_manual(name = 'Winner by Total Votes', values = c(\"REPUBLICAN\"= \"red\", \"DEMOCRAT\"=\"blue\")) +     guides(color = guide_legend(title = \"Winner by Total Votes\")) + \n  labs(\n    title = 'House Majority vs Popular Vote Majority',\n    subtitle = \"By State in 2016\",\n    #caption = \"Teal & Harmon | Tidy Tuesday 2023\"\n  ) + \n  theme(\n    plot.title = element_text(size = 25, hjust = 0.5, vjust = -10),\n    plot.subtitle = element_text(size = 24, hjust = 0.5, vjust = -10),\n    #plot.caption = element_text(size = 20, hjust = 0.5),\n    legend.text = element_text(size = 12, hjust = 0),\n    legend.title = element_text(size = 16, hjust= 0),\n    legend.position = c(0.6,0.03)\n  )\n\n\nus2018 <- plot_usmap(data = data2018, \n           values = \"winnerByHouseMajority\", \n           labels = FALSE) + \n  scale_fill_manual(name = 'Winner by House Majority', \n                    values = c(\"REPUBLICAN\" = 'red' , \"DEMOCRAT\" = 'blue'))+ \n  geom_label_repel(data = data2016,\n                   aes(label = abbr,\n                       geometry = geom,\n                       color = winnerByTotalVotes),\n                   stat = 'sf_coordinates',\n                   size = 5,\n                   force = 0.01, \n                   min.segment.length = 0) +\n  scale_color_manual(name = 'Winner by Total Votes', values = c(\"REPUBLICAN\"= \"red\", \"DEMOCRAT\"=\"blue\")) +     guides(color = guide_legend(title = \"Winner by Total Votes\")) + \n  labs(\n    title = 'House Majority vs Popular Vote Majority',\n    subtitle = \"By State in 2018\",\n    #caption = \"Teal & Harmon | Tidy Tuesday 2023\"\n  ) + \n  theme(\n    plot.title = element_text(size = 25, hjust = 0.5, vjust = -10),\n    plot.subtitle = element_text(size = 24, hjust = 0.5, vjust = -10),\n    #plot.caption = element_text(size = 20, hjust = 0.5),\n    legend.text = element_text(size = 12, hjust = 0),\n    legend.title = element_text(size = 16, hjust= 0),\n    legend.position = c(0.6,0.03)\n  )\n\nus2020 <- plot_usmap(data = data2020, \n           values = \"winnerByHouseMajority\", \n           labels = FALSE) + \n  scale_fill_manual(name = 'Winner by House Majority', \n                    values = c(\"REPUBLICAN\" = 'red' , \"DEMOCRAT\" = 'blue'))+ \n  geom_label_repel(data = data2016,\n                   aes(label = abbr,\n                       geometry = geom,\n                       color = winnerByTotalVotes),\n                   stat = 'sf_coordinates',\n                   size = 5,\n                   force = 0.01, \n                   min.segment.length = 0,\n                   force_pull = 0.5) +\n  scale_color_manual(name = 'Winner by Total Votes', values = c(\"REPUBLICAN\"= \"red\", \"DEMOCRAT\"=\"blue\")) +     guides(color = guide_legend(title = \"Winner by Total Votes\")) + \n  labs(\n    title = 'House Majority vs Popular Vote Majority',\n    subtitle = \"By State in 2020\",\n    caption = \"Teal & Harmon | Tidy Tuesday 2023\"\n  ) + \n  theme(\n    plot.title = element_text(size = 25, hjust = 0.5, vjust = -10),\n    plot.subtitle = element_text(size = 24, hjust = 0.5, vjust = -10),\n    plot.caption = element_text(size = 20, hjust = 0.5),\n    legend.text = element_text(size = 12, hjust = 0),\n    legend.title = element_text(size = 16, hjust= 0),\n    legend.position = c(0.6,0.03)\n  )\n\nggarrange(us2016, us2018, us2020, ncol = 1)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=1344}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}