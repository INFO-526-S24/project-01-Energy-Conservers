---
title: "Taking a look into voting trends and effects"
subtitle: "INFO 526 - Spring 2024 - Project 1"
author: "The Power of Voters: Christian Ortmann, Sachin Patil, Abhishek Kumar, Tejas Bhawari, Monica Kommareddy, Nick Ferrante"
title-slide-attributes:
  data-background-image: images/USHouse1.jpeg
  data-background-size: stretch
  data-background-opacity: "0.5"
  data-slide-number: none
format:
  
  revealjs:
    transition: convex
    theme:  ['data/customtheming.scss']
    auto-animate-duration: 1.5
editor: visual
execute:
  echo: false
  warning: false
  message: false
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: load-packages
#| include: false


# Load packages here
if (!require("pacman")) 
  install.packages("pacman")

options(timeout = 1200)

pacman::p_load(tidyverse, #Add new packages as necessary
               here,
               devtools,
               dlookr,
               dplyr,
               usmap,
               sf,
               ggrepel,
               scales,
               usmapdata, 
               grid,
               ggpubr
               )
remotes::install_github("ropensci/USAboundaries")
remotes::install_github("ropensci/USAboundariesData")


```

```{r}
#| label: setup
#| include: false

# Plot theme
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 14))

# For better figure resolution
knitr::opts_chunk$set(
  fig.retina = 3, 
  dpi = 300, 
  fig.width = 6, 
  fig.asp = 0.618, 
  fig.align = "center"
  )
```

```{r}
#| label: load-data
#| include: false
# Load data here
elec <- readr::read_csv('data/house_population_merged.csv')
describe(elec)
elec16to20 <- elec |>
  filter(between(year,2016,2020))

```

# US House Election Dataset

## Understanding the Dataset

-   Data sourced from MIT Election Data and Science Lab

::: {.fragment .fade-in}
-   Contains observations from elections in the House of Representatives over a span of 47 years starting in 1976 all the way up to 2022 and encompasses a total of 32,452 recorded events. Each event is represented with 20 attributes.
:::

::: {.fragment .fade-in}
-   For our analysis some of the most important variables will be:

    ::: columns
    ::: {.column width="33%"}
    **`year`**
    :::

    ::: {.column width="33%"}
    **`party`**
    :::

    ::: {.column width="34%"}
    **`state_po`**
    :::

    ::: {.column width="33%"}
    **`population`**
    :::

    ::: {.column width="33%"}
    **`totalvotes`**
    :::

    ::: {.column width="34%"}
    **`district`**
    :::
    :::
:::

## Question 1 {auto-animate="true"}

::: {style="margin-top: 0px;"}
Election Results
:::

How did US voting trends change election results throughout the 2016-2020 presidential term?

::: {.fragment .fade-in}
### Analysis

To answer this question we will look at which party won in each state for the years 2016, 2018, and 2020 to identify patterns and significant changes that occurred in the election results.
:::

##  {auto-animate="true"}

::: {style="margin-top: -80px; font-size: 1.5em; font-weight: bold;"}
Election Results
:::

```{r}
#| label: Data Wrangling


for (date in c(2016, #aggregate state mode of party to determine which party has the 
               2018, #majority
               2020)) {
  result <- elec16to20 |>
    filter(year == date) |>
    group_by(state) |>
    summarize(winnerByHouseMajority = names(which.max(table(party))))
  assign(paste0('partyMaj', 
                date), 
         result)
}
  
for(date in c(2016,2018,2020)) { #for each state determine which party got the most votes
  result <- elec16to20 |>
    filter(year == date) |>
    group_by(state) |>
    summarize(winnerByTotalVotes = party[which.max(candidatevotes)], 
              partyVotes = sum(candidatevotes)) |>
    mutate(fips = fips(state)) #necessary for plotting on US map only on this plot because we will merge
  assign(paste0('genMaj',
                date), 
         result)
}

data2016 <- merge(genMaj2016,partyMaj2016) |>
  merge(centroid_labels(regions = c('states')), by = "fips") #adds in data for centroid of each state for labeling
data2018 <- merge(genMaj2018, partyMaj2018) |> 
  merge(centroid_labels(regions = c('states')), by = "fips")
data2020 <- merge(genMaj2020, partyMaj2020) |>
  merge(centroid_labels(regions = c('states')), by = "fips")
```

::: panel-tabset
## 2016

```{r  fig.width = 14, fig.height = 34 }
#| label: Data Visualization
#general plot just to get used to the function. We can add layers like a ggplot object
#For Question 1 we want three maps of the US where each state is colored based on the winning party, then also a number for each state corresponding to the party that had the most votes


 us2016 <- plot_usmap(data = data2016, 
           values = "winnerByHouseMajority", 
           labels = FALSE) + 
  scale_fill_manual(name = 'Winner by House Majority', 
                    values = c("REPUBLICAN" = 'red' , "DEMOCRAT" = 'blue'))+ 
  geom_label_repel(data = data2016,
                   aes(label = abbr,
                       geometry = geom,
                       color = winnerByTotalVotes),
                   stat = 'sf_coordinates',
                   size = 5,
                   force = 0.01, 
                   min.segment.length = 0) +
  scale_color_manual(name = 'Winner by Total Votes', values = c("REPUBLICAN"= "red", "DEMOCRAT"="blue")) +     guides(color = guide_legend(title = "Winner by Total Votes")) + 
  labs(
    title = 'House Majority vs Popular Vote Majority',
    subtitle = "By State in 2016",
    caption = "Teal & Harmon | Tidy Tuesday 2023"
  ) + 
  theme(
    plot.title = element_text(size = 25, hjust = 0.5, vjust = -10),
    plot.subtitle = element_text(size = 24, hjust = 0.5, vjust = -10),
    plot.caption = element_text(size = 20, hjust = 0.5),
    legend.text = element_text(size = 12, hjust = 0),
    legend.title = element_text(size = 16, hjust= 0),
    legend.position = c(0.6,0.03)
  )

us2016
```

## 2018

```{r fig.width = 14, fig.height = 34 }
us2018 <- plot_usmap(data = data2018,
           values = "winnerByHouseMajority",
           labels = FALSE) +
  scale_fill_manual(name = 'Winner by House Majority',
                    values = c("REPUBLICAN" = 'red' , "DEMOCRAT" = 'blue'))+
  geom_label_repel(data = data2016,
                   aes(label = abbr,
                       geometry = geom,
                       color = winnerByTotalVotes),
                   stat = 'sf_coordinates',
                   size = 5,
                   force = 0.01,
                   min.segment.length = 0) +
  scale_color_manual(name = 'Winner by Total Votes', values = c("REPUBLICAN"= "red", "DEMOCRAT"="blue")) +     guides(color = guide_legend(title = "Winner by Total Votes")) +
  labs(
    title = 'House Majority vs Popular Vote Majority',
    subtitle = "By State in 2018",
    caption = "Teal & Harmon | Tidy Tuesday 2023"
  ) +
  theme(
    plot.title = element_text(size = 25, hjust = 0.5, vjust = -10),
    plot.subtitle = element_text(size = 24, hjust = 0.5, vjust = -10),
    plot.caption = element_text(size = 20, hjust = 0.5),
    legend.text = element_text(size = 12, hjust = 0),
    legend.title = element_text(size = 16, hjust= 0),
    legend.position = c(0.6,0.03)
  )

us2018
```

## 2020

```{r fig.width = 14, fig.height = 34 }
us2020 <- plot_usmap(data = data2020,
           values = "winnerByHouseMajority",
           labels = FALSE) +
  scale_fill_manual(name = 'Winner by House Majority',
                    values = c("REPUBLICAN" = 'red' , "DEMOCRAT" = 'blue'))+
  geom_label_repel(data = data2016,
                   aes(label = abbr,
                       geometry = geom,
                       color = winnerByTotalVotes),
                   stat = 'sf_coordinates',
                   size = 5,
                   force = 0.01,
                   min.segment.length = 0,
                   force_pull = 0.5) +
  scale_color_manual(name = 'Winner by Total Votes', values = c("REPUBLICAN"= "red", "DEMOCRAT"="blue")) +     guides(color = guide_legend(title = "Winner by Total Votes")) +
  labs(
    title = 'House Majority vs Popular Vote Majority',
    subtitle = "By State in 2020",
    caption = "Teal & Harmon | Tidy Tuesday 2023"
  ) +
  theme(
    plot.title = element_text(size = 25, hjust = 0.5, vjust = -10),
    plot.subtitle = element_text(size = 24, hjust = 0.5, vjust = -10),
    plot.caption = element_text(size = 20, hjust = 0.5),
    legend.text = element_text(size = 12, hjust = 0),
    legend.title = element_text(size = 16, hjust= 0),
    legend.position = c(0.6,0.03)
  )

us2020
```
:::

## Insight

-   The sentiment of the general population is often overlooked by the electoral system
-   The sentiment of people during a single presidency will change significantly
-   Evident trends can be seen such as supporting the opposite party of the current president in midterm elections

## Question 2 {auto-animate="true"}

::: {style="margine-top: 0px;"}
Arizona Congressional Districts
:::

How often did change occur in House representation from the years 2012-2022 in the state of Arizona and which voting methods played a significant role in these elections?

::: {.fragment .fade-in}
### Analysis

To answer this question we will look at Arizona congressional district mappings in the years 2012, 2016, and 2022 to examine the changes that occur in district representation. We will also consider various voting methods and determine which played the largest roles in these elections.
:::

##  {auto-animate="true" transition="none-out"}

::: {style="margin-top: -80px; font-size: 1.5em; font-weight: bold;"}
Arizona Congressional Districts
:::

```{r}
#| label: Arizona Congressional District Maps

elec12to22 <- elec |>
  filter(between(year,2012,2022))

ariz <- elec12to22 |>
  filter(state == "ARIZONA",
         !is.na(party))

for(date in c(2012, 2016, 2022)){
  result2 <- ariz |>
    filter(year == date) |>
    group_by(district) |>
    summarise(winParty = party[which.max(candidatevotes)])
  assign(paste0('distWin', date), result2)
}
```

::: panel-tabset
## 2012

```{r}

# 2012 District Map
# Get dataframe to map AZ state from USAboundaries
cd_az12 <- USAboundaries::us_congressional(resolution = "high", states = c("Arizona")) |> 
  st_sf() |>
  rename(district = "cd116fp")

# Change district variable type to numeric and rename it 'district'
cd_az12$district <- as.numeric(cd_az12$district)


# Join USAboundaries data with our dataset to determine party winners of each district
azMap12 <- full_join(cd_az12, distWin2012, by = 'district')

# Create and extract mid points of districts on map for labeling
centroids <- st_centroid(azMap12)
azCoords <- as.data.frame(st_coordinates(centroids))
azCoords$district <- c(2,3,1,9,8,4,6,5,7)
azMap12 <- full_join(azMap12, azCoords, by = "district")


#Plot district map
# Regular plot no labels
azMap12 |>
  ggplot() +
  geom_sf(aes(fill = winParty)) +
  scale_fill_manual(name = "Party", values = c("blue", "red")) +
  labs(title = "Arizona Congressional Districts 2012") +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank(),
        panel.grid = element_blank(),
        panel.background = element_blank())

## Map with white district labels
# azMap12 |>
#   ggplot() + 
#   geom_sf(aes(fill = winParty)) +
#   geom_text_repel(box.padding = 0.5, 
#                   max.overlaps = Inf,
#                   size = 4,
#                   aes(label = district, x = X, y = Y),
#                   min.segment.length = 0,
#                   color = "white") +
#   scale_fill_manual(name = "Party", values = c("blue", "red")) +
#   guides(fill = FALSE) +
#   labs(title = "Arizona Congressional Districts 2012") +
#   theme(axis.text = element_blank(),
#         axis.ticks = element_blank(),
#         axis.title = element_blank(),
#         legend.position = "left",
#         panel.grid = element_blank(),
#         panel.background = element_blank())






```

## 2016

```{r}

# 2016 District Map
# Get dataframe to map AZ state from USAboundaries
cd_az16 <- USAboundaries::us_congressional(resolution = "high", states = c("Arizona")) |> 
  st_sf() |>
  rename(district = "cd116fp")

# Change district variable type to numeric and rename it 'district'
cd_az16$district <- as.numeric(cd_az16$district)

# Join USAboundaries data with our dataset to determine party winners of each district
azMap16 <- full_join(cd_az16, distWin2016, by = 'district')

# Determine if the district party representation changed from previous plot
azMap16$change <- c("yes", "no", "no", "no", "no", "no", "no", "no", "no")


# Plot district map
azMap16 |>
  ggplot() + 
  geom_sf(aes(fill = winParty, alpha = change)) +
  scale_fill_manual(name = "Party", values = c("blue", "red")) +
  scale_alpha_discrete(range = c(0.5, 1)) +
  labs(title = "Arizona Congressional Districts 2016") +
  guides(alpha = FALSE) +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank(),
        panel.grid = element_blank(),
        panel.background = element_blank())

# Normal plot no alpha
# azMap16 |>
#   ggplot() + 
#   geom_sf(aes(fill = winParty)) +
#   scale_fill_manual(name = "Party", values = c("blue", "red")) +
#   labs(title = "Arizona Congressional Districts 2016") +
#   theme(axis.text = element_blank(),
#         axis.ticks = element_blank(),
#         panel.grid = element_blank(),
#         panel.background = element_blank())

```

## 2022

```{r}

# 2022 District Map
# Get dataframe to map AZ state from USAboundaries
cd_az22 <- USAboundaries::us_congressional(resolution = "high", states = c("Arizona")) |> 
  st_sf() |>
  rename(district = "cd116fp")

# Change district variable type to numeric and rename it 'district'
cd_az22$district <- as.numeric(cd_az22$district)

# Join USAboundaries data with our dataset to determine party winners of each district
azMap22 <- full_join(cd_az22, distWin2022, by = 'district')

# Determine if the district party representation changed from previous plot
azMap22$change <- c("no", "no", "yes", "yes", "no", "yes", "no", "no", "no")

# Plot district map
azMap22 |>
  ggplot() + 
  geom_sf(aes(fill = winParty, alpha = change)) +
  scale_fill_manual(name = "Party", values = c("blue", "red")) +
  scale_alpha_discrete(range = c(0.5, 1)) +
  labs(title = "Arizona Congressional Districts 2022") +
  guides(alpha = FALSE) +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank(),
        panel.grid = element_blank(),
        panel.background = element_blank())




```
:::

##  {transition="none-in"}

::: {style="margin-top: -80px; font-size: 1.5em; font-weight: bold;"}
Arizona Congressional Districts
:::

::: panel-tabset
## 2012

```{r}

# 2012 District Map
# Get dataframe to map AZ state from USAboundaries
cd_az12 <- USAboundaries::us_congressional(resolution = "high", states = c("Arizona")) |> 
  st_sf() |>
  rename(district = "cd116fp")

# Change district variable type to numeric
cd_az12$district <- as.numeric(cd_az12$district)

# Join USAboundaries data with our dataset to determine party winners of each district
azMap12 <- full_join(cd_az12, distWin2012, by = 'district')

centroids <- st_centroid(azMap12)
azCoords <- as.data.frame(st_coordinates(centroids))
azCoords$district <- c(2,3,1,9,8,4,6,5,7)
azMap12 <- full_join(azMap12, azCoords, by = "district")


#Plot district map
# Regular plot no labels
azMap12 |>
  ggplot() +
  geom_sf(aes(fill = winParty)) +
  scale_fill_manual(name = "Party", values = c("blue", "red")) +
  labs(title = "Arizona Congressional Districts 2012") +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank(),
        panel.grid = element_blank(),
        panel.background = element_blank())


## Map with white district labels
# azMap12 |>
#   ggplot() + 
#   geom_sf(aes(fill = winParty)) +
#   geom_text_repel(box.padding = 0.5, 
#                   max.overlaps = Inf,
#                   size = 4,
#                   aes(label = district, x = X, y = Y),
#                   min.segment.length = 0,
#                   color = "white") +
#   scale_fill_manual(name = "Party", values = c("blue", "red")) +
#   guides(fill = FALSE) +
#   labs(title = "Arizona Congressional Districts 2012") +
#   theme(axis.text = element_blank(),
#         axis.ticks = element_blank(),
#         axis.title = element_blank(),
#         legend.position = "left",
#         panel.grid = element_blank(),
#         panel.background = element_blank())






```

## 2022

```{r}

# 2022 District Map
# Get dataframe to map AZ state from USAboundaries
cd_az22 <- USAboundaries::us_congressional(resolution = "high", states = c("Arizona")) |> 
  st_sf() |>
  rename(district = "cd116fp")

# Change district variable type to numeric and rename it 'district'
cd_az22$district <- as.numeric(cd_az22$district)

# Join USAboundaries data with our dataset to determine party winners of each district
azMap22 <- full_join(cd_az22, distWin2022, by = 'district')

# Determine if the district party representation changed from previous plot
azMap22$change <- c("yes", "no", "yes", "yes", "no", "yes", "no", "no", "no")

# Plot district map
azMap22 |>
  ggplot() + 
  geom_sf(aes(fill = winParty, alpha = change)) +
  scale_fill_manual(name = "Party", values = c("blue", "red")) +
  scale_alpha_discrete(range = c(0.5, 1)) +
  labs(title = "Arizona Congressional Districts 2022") +
  guides(alpha = FALSE) +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank(),
        panel.grid = element_blank(),
        panel.background = element_blank())




```
:::

## Insight

-   It is not common for the party representation of a district to change in one or two elections
-   Doesn't mean that change doesn't occur

## Question 2 {auto-animate="true"}

::: {style="margine-top: 0px;"}
Win & Loss ?? Influence of Voting Pattern in Arizona State
:::

Is voting methods played a significant role in these elections?

::: {.fragment .fade-in}
### Analysis

----
:::

##  {auto-animate="true" transition="none-out"}

::: {style="margin-top: -80px; font-size: 1.5em; font-weight: bold;"}
Win or Loss ?? Does it affected by Voting pattern
:::

```{r}
#| label: Load new features into dataset

library(readxl)
house_with_New_features <- read_csv('data/house_with_New_features.csv', show_col_types = FALSE)

# Function to determine the category based on conditions
get_category <- function(row) {
  if (row["fusion_ticket"] == 1) {
    return("fusion_ticket")
  } else if (row["runoff"] == 1) {
    return("runoff")
  } else if (row["special"] == 1) {
    return("special")
  } else if (row["writein"] == 1) {
    return("writein")
  } else if (row["unofficial"] == 1) {
    return("unofficial")
  } else {
    return("Normal")
  }
}

# Apply the function to each row
house_with_New_features$Type_of_Voting <- apply(house_with_New_features , 1, get_category)


# Create a new column 'WinLoss' based on conditions
house_with_New_features$RESULT <- ifelse(house_with_New_features$mode == "TOTAL" &
                       house_with_New_features$candidatevotes == ave(house_with_New_features$candidatevotes, house_with_New_features$year, house_with_New_features$state, house_with_New_features$district, FUN = max) &
                       ave(house_with_New_features$mode, house_with_New_features$year, house_with_New_features$state, house_with_New_features$district, FUN = function(x) sum(x == "TOTAL")) > 1,
                     "Win", "Loss")

```

```{r}
#| label: Data Wrangling Q.2

# Load necessary libraries
library(readxl)
library(dplyr)
library(ggplot2)

# Filter data for Arizona state, relevant columns, and years 2012-2022
voting_data_arizona <- house_with_New_features %>%
  filter(state == "ARIZONA", year >= 2012 & year <= 2022) %>%
  select(year, Type_of_Voting, RESULT)

# Count the number of candidates for each combination of Year, Type_of_Voting, and RESULT
voting_result_counts_arizona <- voting_data_arizona %>%
  group_by(year, Type_of_Voting, RESULT) %>%
  summarise(Count = n())

# Calculate the percentage of candidates for each combination
voting_result_counts_arizona <- voting_result_counts_arizona %>%
  group_by(year, Type_of_Voting) %>%
  mutate(Percentage = (Count / sum(Count)) * 100) %>%
  ungroup() %>%
  arrange(year, desc(Count))

# Custom color palette
custom_colors <- c("#009688", "#FF9800")
```

```{r}
#| label: Data Visualization Q.2

# Visualization - Enhanced Horizontally Stacked Bar Plot for Arizona with Percentage Labels

ggplot(voting_result_counts_arizona, aes(x = reorder(factor(Type_of_Voting, levels = unique(Type_of_Voting)), Count), y = Count, fill = RESULT)) +
  geom_bar(stat = "identity", color = "white") +
  geom_text(aes(label = paste0(round(Percentage, 1), "%")), 
            position = position_stack(vjust = 0.5),
            color = "black", size = 5, fontface = "bold") +  # Add percentage labels
  facet_wrap(~ year, scales = "free") +
  labs(title = "Impact of Types of Voting on House Representation in Arizona (2012-2022)",
       y = "Number of Candidates",
       x = "Type of Voting") +
  scale_fill_manual(values = custom_colors) +  # Set custom colors
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5,size = 14),  # Rotate labels by 90 degrees
        axis.text.y = element_text(size = 14),
        plot.title = element_text(hjust = 0.5, size = 18, face = "bold"),
        legend.title = element_text(size = 16),
        legend.text = element_text(size = 16),
        legend.position = "bottom",
        panel.grid.major.y = element_blank(),  # Remove horizontal grid lines
        panel.grid.minor.y = element_blank(),  # Remove horizontal grid lines
        panel.grid.major.x = element_blank(),  # Remove horizontal grid lines
        panel.grid.minor.x = element_blank(),  # Remove horizontal grid lines
        panel.background = element_rect(fill = "white"),  # Set panel background color
        plot.background = element_rect(fill = "#F5F5F5"),  # Set plot background color
        strip.background = element_rect(fill = "#E0E0E0", color = "white"),  # Set facet strip background color
        strip.text = element_text(face = "bold",size = 16),  # Set strip text size
        axis.title.y = element_text(size = 18),  # Set y-axis label size
        axis.title.x = element_text(size = 18)) +  # Set x-axis label size
  coord_flip()  # Flip the coordinates to create a horizontally stacked bar chart

```

## Conclusion
